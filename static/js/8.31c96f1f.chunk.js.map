{"version":3,"sources":["reducers/cart/requests.ts","reducers/cart/actions.ts","reducers/books/requests.ts","reducers/books/actions.ts","reducers/books/hooks.ts","reducers/orders/requests.ts","reducers/orders/actions.ts","reducers/orders/hooks.ts","components/BookDrawer.tsx","pages/AdminOrderPage.tsx"],"names":["getCartItemsFromStorage","JSON","parse","localStorage","getItem","getCartItems","userId","a","timeout","userCartItems","find","item","items","putCartItems","cartItems","userCart","updated","exists","i","map","v","books","setItem","stringify","cartSetItems","type","ActionTypes","setItems","payload","cartFetchStart","fetchStart","cartFetchEnd","errorMessage","fetchEnd","apiGetCartItems","dispatch","console","log","apiSetCart","message","getBooksFromGoogle","fetch","result","json","getBooksFromStorage","setBooksToLocalStorage","getBooks","postBooks","savedBooks","allBooks","putBooks","updatedBooks","replace","deleteBooks","filter","book","id","setBooks","addBooks","updateBooks","removeBooks","booksFetchStart","booksFetchEnd","useGetBooks","forceFetch","useState","fetched","setFetched","useDispatch","useSelector","state","loading","hasLoaded","useEffect","googleBooks","transformedBooks","transformGoogleBookToApi","createdBooks","useBookActions","apiBooksDelete","apiBooksPost","apiBooksPut","getOrdersFromStorage","setOrdersToLocalStorage","orders","getOrdersByUser","allOrders","o","buyer","postOrders","savedOrders","putOrders","updatedOrders","setOrders","updateOrders","ordersFetchStart","ordersFetchEnd","apiGetOrdersByUser","apiPutOrders","useOrders","useOrderActions","createOrder","user","order","uuid","name","surname","username","status","orderStatuses","new","confirmOrder","paid","cancelOrder","canceled","updateOrder","useGetMyOrders","me","useMe","useGetOrdersByUserId","setFecthed","BookDrawer","handleAddToCartClick","open","setOpen","onClick","variant","onClose","key","divider","alt","title","src","book_cover","primary","secondary","author","published_date","OrderPage","useAllowAdmin","push","useHistory","useParams","orderId","allowedStatuses","role","getAllowedOrdersStatusChanges","handleAddItem","_item","quantity","_items","it","handleRemoveItem","handleRemove","pages","href","container","justify","color","sent"],"mappings":"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","file":"static/js/8.31c96f1f.chunk.js","sourcesContent":["import { Book } from \"../books/types\";\nimport { timeout } from \"../helpers\";\nimport { CartItems } from \"./types\";\n\nconst getCartItemsFromStorage = (): CartItems[] =>\n  JSON.parse(localStorage.getItem(\"carts\") || \"[]\");\n\nconst setCartItemsToStorage = (books: CartItems[]) =>\n  localStorage.setItem(\"carts\", JSON.stringify(books));\n\nexport const getCartItems = async (userId: String): Promise<Book[]> => {\n  await timeout(100);\n  const userCartItems = getCartItemsFromStorage().find(\n    item => item.userId === userId\n  ) || { items: [] };\n  return userCartItems.items;\n};\n\nexport const putCartItems = async (\n  userId: String,\n  items: Book[]\n): Promise<CartItems> => {\n  // await timeout(100);\n  const cartItems = getCartItemsFromStorage();\n  const userCart = {\n    userId,\n    items\n  };\n  let updated: CartItems[] = []\n  const exists = cartItems.find(i => i.userId === userId)\n  if(!exists) {\n    updated = [...cartItems, userCart]\n  }\n  if(!!exists) {\n    updated = cartItems.map(v =>\n      v.userId === userId ? userCart : v\n    )\n  }\n  setCartItemsToStorage(updated);\n  return userCart;\n};\n","import { ActionTypes, Item } from \"./types\";\nimport { AppThunk } from \"../store\";\nimport { getCartItems, putCartItems } from \"./requests\";\n\nexport const cartSetItems = (items: Item[]) => ({\n  type: ActionTypes.setItems,\n  payload: { items }\n});\n\n// export const addItems = (items: Item[]) => ({\n//   type: ActionTypes.addItems,\n//   payload: { items }\n// });\n\n// export const removeItems = (items: Item[]) => ({\n//   type: ActionTypes.removeItems,\n//   payload: { items }\n// })\n\n// export const updateItems = (items: Item[]) => ({\n//   type: ActionTypes.updateItems,\n//   payload: { items }\n// })\n\nexport const cartFetchStart = () => ({\n  type: ActionTypes.fetchStart\n});\n\nexport const cartFetchEnd = (errorMessage?: string) => ({\n  type: ActionTypes.fetchEnd,\n  payload: { errorMessage }\n});\n\nexport const apiGetCartItems = (userId: String):AppThunk => async dispatch => {\n  dispatch(cartFetchStart())\n  try {\n    const userCartItems = await getCartItems(userId)\n    dispatch(cartSetItems(userCartItems))\n    dispatch(cartFetchEnd())\n  } catch (e) {\n    console.log(e)\n    dispatch(cartFetchEnd())\n  }\n}\n\nexport const apiSetCart = (userId: string, items: Item[]):AppThunk => async dispatch => {\n  dispatch(cartFetchStart())\n  try {\n    await putCartItems(userId, items)\n    dispatch(cartSetItems(items))\n    dispatch(cartFetchEnd())\n  } catch (e) {\n    console.log(e)\n    dispatch(cartFetchEnd(e.message))\n  }\n}\n","import { timeout, replace } from \"../helpers\";\nimport { Book } from \"./types\";\n\nexport const getBooksFromGoogle = async (): Promise<{ items: any[] }> => {\n  const result = await fetch(\n    `https://www.googleapis.com/books/v1/volumes?q=book`\n  );\n  return await result.json();\n};\n\nconst getBooksFromStorage = (): Book[] | null =>\n  JSON.parse(localStorage.getItem(\"books\") || \"null\");\n\nconst setBooksToLocalStorage = (books: Book[]) =>\n  localStorage.setItem(\"books\", JSON.stringify(books));\n\nexport const getBooks = async (): Promise<Book[] | null> => {\n  await timeout(1000);\n  return getBooksFromStorage();\n};\n\nexport const postBooks = async (books: Book[]) => {\n  await timeout(1000);\n  const savedBooks = getBooksFromStorage() || [];\n  const allBooks = [...books, ...savedBooks];\n  setBooksToLocalStorage(allBooks);\n  return books;\n};\n\nexport const putBooks = async (books: Book[]) => {\n  await timeout(1000);\n  const savedBooks = getBooksFromStorage() || [];\n  const updatedBooks = replace(books, savedBooks);\n  setBooksToLocalStorage(updatedBooks);\n};\n\nexport const deleteBooks = async (books: Book[]) => {\n  await timeout(1000);\n  const savedBooks = getBooksFromStorage() || [];\n  const updatedBooks = savedBooks.filter(\n    book => !books.find(({ id }) => id === book.id)\n  );\n  setBooksToLocalStorage(updatedBooks)\n  return books\n};\n","import { ActionTypes, Book } from \"./types\";\nimport { getBooks, postBooks, getBooksFromGoogle, putBooks, deleteBooks } from \"./requests\";\nimport { AppThunk } from \"../store\";\nimport { transformGoogleBookToApi } from \"../helpers\";\n\nexport const setBooks = (books: Book[]) => ({\n  type: ActionTypes.setBooks,\n  payload: { books }\n});\n\nexport const addBooks = (books: Book[]) => ({\n  type: ActionTypes.addBooks,\n  payload: { books }\n});\n\nexport const updateBooks = (books: Book[]) => ({\n  type: ActionTypes.updateBooks,\n  payload: { books }\n});\n\nexport const removeBooks = (books: Book[]) => ({\n  type: ActionTypes.deleteBooks,\n  payload: { books }\n});\n\nexport const booksFetchStart = () => ({\n  type: ActionTypes.fetchStart\n});\n\nexport const booksFetchEnd = (errorMessage?: string) => ({\n  type: ActionTypes.fetchEnd,\n  payload: { errorMessage }\n});\n\nexport const apiBooksGet = (): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const books = await getBooks();\n    if (books === null) {\n      const googleBooks = await getBooksFromGoogle();\n      const transformedBooks =\n        (googleBooks &&\n          googleBooks.items.map(item => transformGoogleBookToApi(item))) ||\n        [];\n      const createdBooks = await postBooks(transformedBooks);\n      dispatch(setBooks(createdBooks));\n    }\n    if (!!books) {\n      dispatch(setBooks(books));\n    }\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPost = (books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const createdBooks = await postBooks(books);\n    dispatch(addBooks(createdBooks));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPut = (books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    await putBooks(books);\n    dispatch(updateBooks(books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksDelete = (books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    await deleteBooks(books);\n    dispatch(removeBooks(books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootReducer } from \"../rootReducer\";\nimport { apiBooksGet, apiBooksDelete, apiBooksPost, apiBooksPut } from \"./actions\";\nimport { Book } from \"./types\";\n\nexport const useGetBooks = (forceFetch?: boolean) => {\n  const [fetched, setFetched] = useState(!forceFetch)\n  const dispatch = useDispatch();\n  const { books, loading, hasLoaded, errorMessage } = useSelector(\n    (state: RootReducer) => state.books\n  );\n\n  useEffect(() => {\n    if ((!hasLoaded || !fetched) && !loading) {\n      setFetched(true)\n      dispatch(apiBooksGet());\n    }\n  }, [hasLoaded, loading, forceFetch, dispatch, fetched]);\n\n  return {\n    books,\n    loading,\n    hasLoaded,\n    errorMessage\n  }\n};\n\nexport const useBookActions = () => {\n  const dispatch = useDispatch();\n  return {\n    deleteBooks: (books: Book[]) => dispatch(apiBooksDelete(books)),\n    addBooks: (books: Book[]) => dispatch(apiBooksPost(books)),\n    updateBooks: (books: Book[]) => dispatch(apiBooksPut(books)),\n  }\n}\n","import { Order } from \"./types\";\nimport { timeout, replace } from \"../helpers\";\n\nconst getOrdersFromStorage = (): Order[] => JSON.parse(localStorage.getItem('orders') ||  \"[]\")\n\nconst setOrdersToLocalStorage = (orders: Order[]) => localStorage.setItem('orders', JSON.stringify(orders))\n\nexport const getOrders = async():Promise<Order[]> => {\n  await timeout(1000)\n  return getOrdersFromStorage()\n}\n\nexport const getOrdersByUser = async(userId: string): Promise<Order[]> => {\n  await timeout(1000)\n  const allOrders = getOrdersFromStorage()\n  return allOrders.filter(o => o.buyer.id === userId)\n}\n\nexport const postOrders = async(orders: Order[]) => {\n  await timeout(1000);\n  const savedOrders = getOrdersFromStorage();\n  const allOrders = [...orders, ...savedOrders]\n  setOrdersToLocalStorage(allOrders)\n  return allOrders\n}\n\nexport const putOrders = async(orders: Order[]) => {\n  await timeout(1000)\n  const savedOrders = getOrdersFromStorage();\n  const updatedOrders = replace(orders, savedOrders)\n  setOrdersToLocalStorage(updatedOrders)\n}\n","import { Order, ActionTypes } from \"./types\";\nimport { AppThunk } from \"../store\";\nimport { getOrders, postOrders, getOrdersByUser, putOrders } from \"./requests\";\nimport { apiSetCart } from \"../cart/actions\";\n\nexport const setOrders = (orders: Order[]) => ({\n  type: ActionTypes.setOrders,\n  payload: { orders }\n})\n\nexport const updateOrders = (orders: Order[]) => ({\n  type: ActionTypes.updateOrders,\n  payload: { orders }\n})\n\nexport const ordersFetchStart = () => ({\n  type: ActionTypes.fetchStart\n})\n\nexport const ordersFetchEnd = () => ({\n  type: ActionTypes.fetchEnd\n})\n\nexport const apiOrdersGet = ():AppThunk => async dispatch => {\n  dispatch(ordersFetchStart())\n  try {\n    const orders = await getOrders();\n    dispatch(setOrders(orders))\n    dispatch(ordersFetchEnd())\n  } catch(e) {\n    console.log(e)\n    dispatch(ordersFetchEnd())\n  }\n}\n\nexport const apiGetOrdersByUser = (userId: string):AppThunk => async dispatch => {\n  dispatch(ordersFetchStart())\n  try {\n    const orders = await getOrdersByUser(userId);\n    dispatch(setOrders(orders))\n    dispatch(ordersFetchEnd())\n  } catch(e) {\n    console.log(e)\n    dispatch(ordersFetchEnd())\n  }\n}\n\nexport const apiOrderPost = (order: Order):AppThunk => async dispatch => {\n  dispatch(ordersFetchStart())\n  try {\n    const orders = await postOrders([order]);\n    dispatch(setOrders(orders))\n    dispatch(apiSetCart(order.buyer.id, []))\n    dispatch(ordersFetchEnd())\n  } catch(e) {\n    console.log(e)\n    dispatch(ordersFetchEnd())\n  }\n}\n\nexport const apiPutOrders = (orders: Order[]):AppThunk => async dispatch => {\n  dispatch(ordersFetchStart())\n  try {\n    await putOrders(orders)\n    dispatch(updateOrders(orders))\n    dispatch(ordersFetchEnd())\n  } catch(e) {\n    console.log(e)\n    dispatch(ordersFetchEnd())\n  }\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { uuid } from \"uuidv4\";\nimport { User } from \"../users/types\";\nimport { Item } from \"../cart/types\";\nimport { apiOrderPost, apiGetOrdersByUser, apiPutOrders } from \"./actions\";\nimport { orderStatuses, Order } from \"./types\";\nimport { useMe } from \"../me/hooks\";\nimport { RootReducer } from \"../rootReducer\";\nimport { useEffect, useState } from \"react\";\n\nexport const useOrders = () => {\n  return useSelector((state: RootReducer) => state.orders);\n};\n\nexport const useOrderActions = () => {\n  const dispatch = useDispatch();\n\n  return {\n    createOrder: (user: User, cartItems: Item[]) =>\n      dispatch(\n        apiOrderPost({\n          id: uuid(),\n          buyer: {\n            id: user.id,\n            name: user.name,\n            surname: user.surname,\n            username: user.username\n          },\n          status: orderStatuses.new,\n          items: cartItems\n        })\n      ),\n    confirmOrder: (order: Order) =>\n      dispatch(apiPutOrders([{ ...order, status: orderStatuses.paid }])),\n    cancelOrder: (order: Order) =>\n      dispatch(apiPutOrders([{ ...order, status: orderStatuses.canceled }])),\n    updateOrder: (order: Order) => dispatch(apiPutOrders([order]))\n  };\n};\n\nexport const useGetMyOrders = () => {\n  const dispatch = useDispatch();\n  const me = useMe();\n  const orders = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (!orders.hasLoaded && !orders.loading && me.me && me.me.id) {\n      dispatch(apiGetOrdersByUser(me.me.id));\n    }\n  });\n\n  return {\n    ...orders,\n    loading: me.loading || orders.loading\n  };\n};\n\nexport const useGetOrdersByUserId = (userId: string) => {\n  const [fetched, setFecthed] = useState(false)\n  const dispatch = useDispatch();\n  const { orders, loading, hasLoaded} = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (userId && !fetched && !loading) {\n      setFecthed(true)\n      dispatch(apiGetOrdersByUser(userId));\n    }\n  }, [userId, loading, dispatch, fetched]);\n\n  return {\n    orders,\n    loading,\n    hasLoaded\n  }\n};\n\n","import React, { useState } from \"react\";\nimport {\n  Drawer,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { useGetBooks } from \"../reducers/books/hooks\";\nimport { Book } from \"../reducers/books/types\";\n\nconst BookDrawer = ({\n  handleAddToCartClick\n}: {\n  handleAddToCartClick: Function;\n}) => {\n  const [open, setOpen] = useState(false);\n  const { books } = useGetBooks(true);\n  const addToCart = (book: Book) => () => handleAddToCartClick(book)();\n  const handleOpenClick = () => setOpen(true);\n  const handleCloseClick = () => setOpen(false);\n  return (\n    <div>\n      <Button onClick={handleOpenClick} variant=\"contained\">Add Item</Button>\n      <Drawer open={open} onClose={handleCloseClick}>\n        <List>\n          {books.map(item => (\n            <ListItem key={`${item.id}`} divider>\n              <ListItemAvatar>\n                <Avatar\n                  alt={item.title}\n                  src={item.book_cover}\n                  variant=\"square\"\n                />\n              </ListItemAvatar>\n              <ListItemText primary={item.title} />\n              <ListItemText secondary={item.author} />\n              <ListItemText secondary={item.published_date} />\n              <div>\n                <Button onClick={addToCart(item)}>Add To Cart</Button>\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default BookDrawer\n","import React from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { pages } from \"../routes\";\nimport {\n  Grid,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  CircularProgress\n} from \"@material-ui/core\";\nimport {\n  useOrderActions,\n  useGetOrdersByUserId\n} from \"../reducers/orders/hooks\";\nimport { Item } from \"../reducers/cart/types\";\nimport { getAllowedOrdersStatusChanges } from \"../reducers/helpers\";\nimport { useMe } from \"../reducers/me/hooks\";\nimport { orderStatuses } from \"../reducers/orders/types\";\nimport BookDrawer from \"../components/BookDrawer\";\nimport { useAllowAdmin } from \"../reducers/users/hooks\";\n\nconst OrderPage = () => {\n  useAllowAdmin();\n  const { push } = useHistory();\n  const { orderId, userId } = useParams();\n  const { orders, loading } = useGetOrdersByUserId(userId || \"\");\n  const { updateOrder } = useOrderActions();\n  const { me } = useMe();\n\n  const handleGoBack = () => push(pages[\"/users/:userId/orders\"].href(userId));\n\n  const order = orders.find(o => o.id === orderId);\n  const allowedStatuses: any =\n    (me &&\n      me.role &&\n      order &&\n      getAllowedOrdersStatusChanges(me.role, order.status)) ||\n    false;\n  const handleAddItem = (item: Item) => () => {\n    if (order) {\n      const exists = order && order.items.find(({ id }) => id === item.id);\n      if (!!exists) {\n        const _item = { ...exists, quantity: exists.quantity + 1 };\n        const _items = order.items.map(it =>\n          it.id === exists.id ? _item : it\n        );\n        return updateOrder({ ...order, items: _items });\n      }\n      return updateOrder({\n        ...order,\n        items: [...order.items, { ...item, quantity: 1 }]\n      });\n    }\n  };\n  const handleRemoveItem = (item: Item) => () => {\n    if (order) {\n      const exists = order && order.items.find(({ id }) => id === item.id);\n      if (!!exists && exists.quantity > 1) {\n        const _item = { ...exists, quantity: exists.quantity - 1 };\n        const _items = order.items.map(it =>\n          it.id === exists.id ? _item : it\n        );\n        return updateOrder({ ...order, items: _items });\n      }\n      return updateOrder({\n        ...order,\n        items: order.items.filter(({ id }) => id !== item.id)\n      });\n    }\n  };\n  const handleRemove = (item: Item) => () => {\n    if (order) {\n      return updateOrder({\n        ...order,\n        items: order.items.filter(({ id }) => id !== item.id)\n      });\n    }\n  };\n\n  const handleConfirmClick = () =>\n    order && updateOrder({ ...order, status: orderStatuses.paid });\n  const handleCancelClick = () =>\n    order && updateOrder({ ...order, status: orderStatuses.canceled });\n  const handleSentClick = () =>\n    order && updateOrder({ ...order, status: orderStatuses.sent });\n\n  return (\n    <div>\n      {loading && <CircularProgress />}\n      {!loading && order && (\n        <div>\n          <Button onClick={handleGoBack}>Go Back</Button>\n\n          <div>\n            <span>Order id:</span>\n            <span>{order.id}</span>\n          </div>\n\n          <div>\n            <span>Order status:</span>\n            <span>{order.status}</span>\n          </div>\n          {order.status === orderStatuses.new && (\n            <BookDrawer handleAddToCartClick={handleAddItem} />\n          )}\n          <div>\n            <div>Order Items</div>\n            <List>\n              {order.items.map(item => (\n                <ListItem key={`${item.id}`} divider>\n                  <ListItemAvatar>\n                    <Avatar\n                      alt={item.title}\n                      src={item.book_cover}\n                      variant=\"square\"\n                    />\n                  </ListItemAvatar>\n                  <ListItemText primary={item.title} />\n                  <ListItemText secondary={item.author} />\n                  <ListItemText secondary={item.published_date} />\n                  <div>\n                    {order.status === orderStatuses.new && (\n                      <Button onClick={handleRemoveItem(item)}>{`<`}</Button>\n                    )}\n                    <span>{`Quantity: ${item.quantity}`}</span>\n                    {order.status === orderStatuses.new && (\n                      <Button onClick={handleAddItem(item)}>{`>`}</Button>\n                    )}\n                  </div>\n                  <div>\n                    {order.status === orderStatuses.new && (\n                      <Button onClick={handleRemove(item)}>Remove</Button>\n                    )}\n                  </div>\n                </ListItem>\n              ))}\n            </List>\n\n            {allowedStatuses && (\n              <Grid container justify=\"flex-end\">\n                {allowedStatuses[orderStatuses.canceled] && (\n                  <Button onClick={handleCancelClick} color=\"secondary\">\n                    Cancel Order\n                  </Button>\n                )}\n                {allowedStatuses[orderStatuses.sent] && (\n                  <Button onClick={handleSentClick} color=\"primary\">\n                    set sent status\n                  </Button>\n                )}\n                {allowedStatuses[orderStatuses.paid] && (\n                  <Button onClick={handleConfirmClick} color=\"primary\">\n                    Confirm Order\n                  </Button>\n                )}\n              </Grid>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderPage;\n"],"sourceRoot":""}
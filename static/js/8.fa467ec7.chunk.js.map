{"version":3,"sources":["reducers/cart/requests.ts","reducers/cart/actions.ts","reducers/books/crud.ts","reducers/books/actions.ts","reducers/books/hooks.ts","reducers/orders/crud.ts","reducers/orders/actions.ts","reducers/orders/hooks.ts","components/BookDrawer.tsx","pages/OrderPage.tsx"],"names":["getCartItemsFromStorage","JSON","parse","localStorage","getItem","getCartItems","userId","a","timeout","userCartItems","find","item","items","putCartItems","cartItems","userCart","updated","exists","i","map","v","books","setItem","stringify","cartSetItems","type","ActionTypes","setItems","payload","cartFetchStart","fetchStart","cartFetchEnd","errorMessage","fetchEnd","apiGetCartItems","dispatch","console","log","apiSetCart","message","crud","getItems","createItems","updateItems","deleteItems","postBooks","putBooks","requiredAdmin","deleteBooks","setBooks","updateBooks","removeBooks","booksFetchStart","booksFetchEnd","useGetBooks","forceFetch","useState","fetched","setFetched","useDispatch","useSelector","state","loading","hasLoaded","useEffect","getBooks","length","getGoogleBooksToApi","newBooks","_books","useBookActions","me","useMe","addBooks","apiBooksPost","id","apiBooksDelete","apiBooksPut","getOrders","postOrders","putOrders","getOrdersByUser","allOrders","filter","o","buyer","setOrders","orders","updateOrders","ordersFetchStart","ordersFetchEnd","apiGetOrdersByUser","apiPutOrders","useOrders","useOrderActions","createOrder","user","order","uuid","name","surname","username","status","orderStatuses","new","confirmOrder","paid","cancelOrder","canceled","updateOrder","useGetMyOrders","useGetOrdersByUserId","setFecthed","BookDrawer","handleAddToCartClick","open","setOpen","onClick","variant","onClose","key","divider","alt","title","src","book_cover","primary","secondary","author","published_date","book","OrderPage","push","useHistory","orderId","useParams","allowedStatuses","role","getAllowedOrdersStatusChanges","handleAddItem","_item","quantity","_items","it","handleRemoveItem","handleRemove","handleCancelClick","pages","href","container","justify","color","sent"],"mappings":"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","file":"static/js/8.fa467ec7.chunk.js","sourcesContent":["import { Book } from '../books/types';\nimport { timeout } from '../helpers';\nimport { CartItems } from './types';\n\nconst getCartItemsFromStorage = (): CartItems[] => JSON.parse(localStorage.getItem('carts') || '[]');\n\nconst setCartItemsToStorage = (books: CartItems[]) => localStorage.setItem('carts', JSON.stringify(books));\n\nexport const getCartItems = async (userId: string): Promise<Book[]> => {\n  await timeout(100);\n  const userCartItems = getCartItemsFromStorage().find(item => item.userId === userId) || { items: [] };\n  return userCartItems.items;\n};\n\nexport const putCartItems = async (userId: string, items: Book[]): Promise<CartItems> => {\n  // await timeout(100);\n  const cartItems = getCartItemsFromStorage();\n  const userCart = {\n    userId,\n    items,\n  };\n  let updated: CartItems[] = [];\n  const exists = cartItems.find(i => i.userId === userId);\n  if (!exists) {\n    updated = [...cartItems, userCart];\n  }\n  if (!!exists) {\n    updated = cartItems.map(v => (v.userId === userId ? userCart : v));\n  }\n  setCartItemsToStorage(updated);\n  return userCart;\n};\n","import { ActionTypes, Item } from './types';\nimport { AppThunk } from '../store';\nimport { getCartItems, putCartItems } from './requests';\n\nexport const cartSetItems = (items: Item[]) => ({\n  type: ActionTypes.setItems,\n  payload: { items },\n});\n\nexport const cartFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const cartFetchEnd = (errorMessage?: string) => ({\n  type: ActionTypes.fetchEnd,\n  payload: { errorMessage },\n});\n\nexport const apiGetCartItems = (userId: string): AppThunk => async dispatch => {\n  dispatch(cartFetchStart());\n  try {\n    const userCartItems = await getCartItems(userId);\n    dispatch(cartSetItems(userCartItems));\n    dispatch(cartFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(cartFetchEnd());\n  }\n};\n\nexport const apiSetCart = (userId: string, items: Item[]): AppThunk => async dispatch => {\n  dispatch(cartFetchStart());\n  try {\n    await putCartItems(userId, items);\n    dispatch(cartSetItems(items));\n    dispatch(cartFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(cartFetchEnd(e.message));\n  }\n};\n","import { Book } from './types';\nimport { requiredAdmin, crud } from '../helpers';\n\nconst { getItems, createItems, updateItems, deleteItems } = crud<Book>('books');\n\nexport { getItems as getBooks };\n\nexport const postBooks = createItems;\n\nexport const putBooks = requiredAdmin(updateItems);\n\nexport const deleteBooks = requiredAdmin(deleteItems);\n","import { ActionTypes, Book } from './types';\nimport { AppThunk } from '../store';\nimport { getGoogleBooksToApi } from '../helpers';\nimport { getBooks, putBooks, deleteBooks, postBooks } from './crud';\nimport { Me } from '../me/types';\n\nexport const setBooks = (books: Book[]) => ({\n  type: ActionTypes.setBooks,\n  payload: { books },\n});\n\nexport const addBooks = (books: Book[]) => ({\n  type: ActionTypes.addBooks,\n  payload: { books },\n});\n\nexport const updateBooks = (books: Book[]) => ({\n  type: ActionTypes.updateBooks,\n  payload: { books },\n});\n\nexport const removeBooks = (books: Book[]) => ({\n  type: ActionTypes.deleteBooks,\n  payload: { books },\n});\n\nexport const booksFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const booksFetchEnd = (errorMessage?: string) => ({\n  type: ActionTypes.fetchEnd,\n  payload: { errorMessage },\n});\n\nexport const apiBooksGet = (): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const books = await getBooks();\n    if (books.length === 0) {\n      const newBooks = await getGoogleBooksToApi();\n      const _books = await postBooks(newBooks);\n      dispatch(setBooks(_books));\n      return dispatch(booksFetchEnd());\n    }\n    if (books.length > 0) {\n      dispatch(setBooks(books));\n      dispatch(booksFetchEnd());\n    }\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPost = (books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await postBooks(books);\n    dispatch(setBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksPut = (me: Me, books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await putBooks(me, books);\n    dispatch(updateBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n\nexport const apiBooksDelete = (me: Me, books: Book[]): AppThunk => async dispatch => {\n  dispatch(booksFetchStart());\n  try {\n    const _books = await deleteBooks(\n      me,\n      books.map(({ id }) => id),\n    );\n    dispatch(removeBooks(_books));\n    dispatch(booksFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(booksFetchEnd(e.message));\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootReducer } from '../rootReducer';\nimport { apiBooksGet, apiBooksDelete, apiBooksPost, apiBooksPut } from './actions';\nimport { Book } from './types';\nimport { useMe } from '../me/hooks';\n\nexport const useGetBooks = (forceFetch?: boolean) => {\n  const [fetched, setFetched] = useState(!forceFetch);\n  const dispatch = useDispatch();\n  const { books, loading, hasLoaded, errorMessage } = useSelector((state: RootReducer) => state.books);\n\n  useEffect(() => {\n    if ((!hasLoaded || !fetched) && !loading) {\n      setFetched(true);\n      dispatch(apiBooksGet());\n    }\n  }, [hasLoaded, loading, forceFetch, dispatch, fetched]);\n\n  return {\n    books,\n    loading,\n    hasLoaded,\n    errorMessage,\n  };\n};\n\nexport const useBookActions = () => {\n  const dispatch = useDispatch();\n  const { me } = useMe();\n  return {\n    addBooks: (books: Book[]) => dispatch(apiBooksPost(books)),\n    deleteBooks: (books: Book[]) => me && dispatch(apiBooksDelete(me, books)),\n    updateBooks: (books: Book[]) => me && dispatch(apiBooksPut(me, books)),\n  };\n};\n","import { Order } from './types';\nimport { crud } from '../helpers';\n\nconst { getItems, createItems, updateItems } = crud<Order>('orders');\n\nexport const getOrders = getItems;\n\nexport const postOrders = createItems;\n\nexport const putOrders = updateItems;\n\nexport const getOrdersByUser = async (userId: string): Promise<Order[]> => {\n  const allOrders = await getOrders();\n  return allOrders.filter(o => o.buyer.id === userId);\n};\n","import { Order, ActionTypes } from './types';\nimport { AppThunk } from '../store';\nimport { getOrders, postOrders, getOrdersByUser, putOrders } from './crud';\nimport { apiSetCart } from '../cart/actions';\n\nexport const setOrders = (orders: Order[]) => ({\n  type: ActionTypes.setOrders,\n  payload: { orders },\n});\n\nexport const updateOrders = (orders: Order[]) => ({\n  type: ActionTypes.updateOrders,\n  payload: { orders },\n});\n\nexport const ordersFetchStart = () => ({\n  type: ActionTypes.fetchStart,\n});\n\nexport const ordersFetchEnd = () => ({\n  type: ActionTypes.fetchEnd,\n});\n\nexport const apiOrdersGet = (): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await getOrders();\n    dispatch(setOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiGetOrdersByUser = (userId: string): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await getOrdersByUser(userId);\n    dispatch(setOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiOrderPost = (order: Order): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    const orders = await postOrders([order]);\n    dispatch(setOrders(orders));\n    dispatch(apiSetCart(order.buyer.id, []));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n\nexport const apiPutOrders = (orders: Order[]): AppThunk => async dispatch => {\n  dispatch(ordersFetchStart());\n  try {\n    await putOrders(orders);\n    dispatch(updateOrders(orders));\n    dispatch(ordersFetchEnd());\n  } catch (e) {\n    console.log(e);\n    dispatch(ordersFetchEnd());\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { uuid } from 'uuidv4';\nimport { User } from '../users/types';\nimport { Item } from '../cart/types';\nimport { apiOrderPost, apiGetOrdersByUser, apiPutOrders } from './actions';\nimport { orderStatuses, Order } from './types';\nimport { useMe } from '../me/hooks';\nimport { RootReducer } from '../rootReducer';\nimport { useEffect, useState } from 'react';\n\nexport const useOrders = () => {\n  return useSelector((state: RootReducer) => state.orders);\n};\n\nexport const useOrderActions = () => {\n  const dispatch = useDispatch();\n\n  return {\n    createOrder: (user: User, cartItems: Item[]) =>\n      dispatch(\n        apiOrderPost({\n          id: uuid(),\n          buyer: {\n            id: user.id,\n            name: user.name,\n            surname: user.surname,\n            username: user.username,\n          },\n          status: orderStatuses.new,\n          items: cartItems,\n        }),\n      ),\n    confirmOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.paid }])),\n    cancelOrder: (order: Order) => dispatch(apiPutOrders([{ ...order, status: orderStatuses.canceled }])),\n    updateOrder: (order: Order) => dispatch(apiPutOrders([order])),\n  };\n};\n\nexport const useGetMyOrders = () => {\n  const dispatch = useDispatch();\n  const me = useMe();\n  const orders = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (!orders.hasLoaded && !orders.loading && me.me && me.me.id) {\n      dispatch(apiGetOrdersByUser(me.me.id));\n    }\n  });\n\n  return {\n    ...orders,\n    loading: me.loading || orders.loading,\n  };\n};\n\nexport const useGetOrdersByUserId = (userId: string) => {\n  const [fetched, setFecthed] = useState(false);\n  const dispatch = useDispatch();\n  const { orders, loading, hasLoaded } = useSelector((state: RootReducer) => state.orders);\n\n  useEffect(() => {\n    if (userId && !fetched && !loading) {\n      setFecthed(true);\n      dispatch(apiGetOrdersByUser(userId));\n    }\n  }, [userId, loading, dispatch, fetched]);\n\n  return {\n    orders,\n    loading,\n    hasLoaded,\n  };\n};\n","import React, { useState } from 'react';\nimport { Drawer, Button, List, ListItem, ListItemText, Avatar, ListItemAvatar } from '@material-ui/core';\nimport { useGetBooks } from '../reducers/books/hooks';\nimport { Book } from '../reducers/books/types';\n\nconst BookDrawer = ({ handleAddToCartClick }: { handleAddToCartClick: Function }) => {\n  const [open, setOpen] = useState(false);\n  const { books } = useGetBooks(true);\n  const addToCart = (book: Book) => () => handleAddToCartClick(book)();\n  const handleOpenClick = () => setOpen(true);\n  const handleCloseClick = () => setOpen(false);\n  return (\n    <div>\n      <Button onClick={handleOpenClick} variant=\"contained\">\n        Add Item\n      </Button>\n      <Drawer open={open} onClose={handleCloseClick}>\n        <List>\n          {books.map(item => (\n            <ListItem key={`${item.id}`} divider>\n              <ListItemAvatar>\n                <Avatar alt={item.title} src={item.book_cover} variant=\"square\" />\n              </ListItemAvatar>\n              <ListItemText primary={item.title} />\n              <ListItemText secondary={item.author} />\n              <ListItemText secondary={item.published_date} />\n              <div>\n                <Button onClick={addToCart(item)}>Add To Cart</Button>\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default BookDrawer;\n","/*eslint-disable */\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { pages } from '../routes';\nimport {\n  Grid,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useGetMyOrders, useOrderActions } from '../reducers/orders/hooks';\nimport { Item } from '../reducers/cart/types';\nimport { getAllowedOrdersStatusChanges } from '../reducers/helpers';\nimport { useMe } from '../reducers/me/hooks';\nimport { orderStatuses } from '../reducers/orders/types';\nimport BookDrawer from '../components/BookDrawer';\n\nconst OrderPage = () => {\n  const { push } = useHistory();\n  const { orderId } = useParams();\n  const { orders, loading } = useGetMyOrders();\n  const { updateOrder } = useOrderActions();\n  const { me } = useMe();\n\n  const handleGoBack = () => push(pages['/my-orders'].href());\n\n  const order = orders.find(o => o.id === orderId);\n  const allowedStatuses: any =\n    (me && me.role && order && getAllowedOrdersStatusChanges(me.role, order.status)) || false;\n  const handleAddItem = (item: Item) => () => {\n    if (order) {\n      const exists = order && order.items.find(({ id }) => id === item.id);\n      if (!!exists) {\n        const _item = { ...exists, quantity: exists.quantity + 1 };\n        const _items = order.items.map(it => (it.id === exists.id ? _item : it));\n        return updateOrder({ ...order, items: _items });\n      }\n      return updateOrder({\n        ...order,\n        items: [...order.items, { ...item, quantity: 1 }],\n      });\n    }\n  };\n  const handleRemoveItem = (item: Item) => () => {\n    if (order) {\n      const exists = order && order.items.find(({ id }) => id === item.id);\n      if (!!exists && exists.quantity > 1) {\n        const _item = { ...exists, quantity: exists.quantity - 1 };\n        const _items = order.items.map(it => (it.id === exists.id ? _item : it));\n        return updateOrder({ ...order, items: _items });\n      }\n      return updateOrder({\n        ...order,\n        items: order.items.filter(({ id }) => id !== item.id),\n      });\n    }\n  };\n  const handleRemove = (item: Item) => () => {\n    if (order) {\n      return updateOrder({\n        ...order,\n        items: order.items.filter(({ id }) => id !== item.id),\n      });\n    }\n  };\n\n  const handleConfirmClick = () => order && updateOrder({ ...order, status: orderStatuses.paid });\n  const handleCancelClick = () => order && updateOrder({ ...order, status: orderStatuses.canceled });\n\n  return (\n    <div>\n      {loading && <CircularProgress />}\n      {!loading && order && (\n        <div>\n          <Button onClick={handleGoBack}>Go Back</Button>\n\n          <div>\n            <span>Order id:</span>\n            <span>{order.id}</span>\n          </div>\n\n          <div>\n            <span>Order status:</span>\n            <span>{order.status}</span>\n          </div>\n          {order.status === orderStatuses.new && <BookDrawer handleAddToCartClick={handleAddItem} />}\n          <div>\n            <div>Order Items</div>\n            <List>\n              {order.items.map(item => (\n                <ListItem key={`${item.id}`} divider>\n                  <ListItemAvatar>\n                    <Avatar alt={item.title} src={item.book_cover} variant=\"square\" />\n                  </ListItemAvatar>\n                  <ListItemText primary={item.title} />\n                  <ListItemText secondary={item.author} />\n                  <ListItemText secondary={item.published_date} />\n                  <div>\n                    {order.status === orderStatuses.new && <Button onClick={handleRemoveItem(item)}>{`<`}</Button>}\n                    <span>{`Quantity: ${item.quantity}`}</span>\n                    {order.status === orderStatuses.new && <Button onClick={handleAddItem(item)}>{`>`}</Button>}\n                  </div>\n                  <div>\n                    {order.status === orderStatuses.new && <Button onClick={handleRemove(item)}>Remove</Button>}\n                  </div>\n                </ListItem>\n              ))}\n            </List>\n\n            {allowedStatuses && (\n              <Grid container justify=\"flex-end\">\n                {allowedStatuses[orderStatuses.canceled] && (\n                  <Button onClick={handleCancelClick} color=\"secondary\">\n                    Cancel Order\n                  </Button>\n                )}\n                {allowedStatuses[orderStatuses.sent] && (\n                  <Button onClick={handleCancelClick} color=\"primary\">\n                    set sent status\n                  </Button>\n                )}\n                {allowedStatuses[orderStatuses.paid] && (\n                  <Button onClick={handleConfirmClick} color=\"primary\">\n                    Confirm Order\n                  </Button>\n                )}\n              </Grid>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderPage;\n"],"sourceRoot":""}